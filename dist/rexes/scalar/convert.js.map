{"version":3,"sources":["rexes/scalar/convert.ts"],"names":[],"mappings":";;;;;;AAAA,iBAA2C,IAAI,CAAC,CAAA;AAGhD,sBAAuB,UAAU,CAAC,CAAA;AAClC,uBAAqB,cAAc,CAAC,CAAA;AAWpC;IAA4C,8BAAc;IASzD,oBAAoB,MAAyB,EAAU,UAAmC;QAT3F,iBA0CC;QAhCC,iBAAO,CAAC;QADW,WAAM,GAAN,MAAM,CAAmB;QAAU,eAAU,GAAV,UAAU,CAAyB;QAN1F,SAAI,GAAc;YACjB,IAAI,EAAG,gBAAQ,CAAC,OAAO;YACvB,IAAI,EAAG,IAAI;YACX,UAAU,EAAG,IAAI;SACjB,CAAC;QAID,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACxE,IAAI,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,EAAZ,CAAY,CAAC,CAAC;QACxD,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,GAAG,SAAS,EAAtB,CAAsB,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,CAAA;IAC7D,CAAC;IAED,sBAAI,6BAAK;aAAT;YACC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC9B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC3B,MAAM,eAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzC,CAAC;gBACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACpD,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;aAED,UAAU,GAAS;YAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;gBACzB,MAAM,eAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC;YACD,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,CAAC;;;OATA;IAWD,0BAAK,GAAL;QACC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,gBAAK,CAAC,KAAK,WAAE,CAAC;IACf,CAAC;IACF,iBAAC;AAAD,CA1CA,AA0CC,CA1C2C,YAAS,GA0CpD;AA1CY,kBAAU,aA0CtB,CAAA","file":"rexes/scalar/convert.js","sourcesContent":["import {IScalarChangeInfo, RexScalar} from \"./\";\r\nimport {Rex} from \"../base\";\r\nimport {IRexInfo} from \"../definitions\";\r\nimport {RexNames} from \"../names\";\r\nimport {Errors} from '../../errors';\r\nimport {DisposalToken} from \"../../\";\r\n/**\r\n * Created by Greg on 01/10/2016.\r\n */\r\n\r\nexport interface Conversion<TFrom, TTo> {\r\n\tfrom ?: (to : TTo) => TFrom;\r\n\tto ?: (to : TFrom) => TTo;\r\n}\r\n\r\nexport class RexConvert<TFrom, TTo> extends RexScalar<TTo> {\r\n\tprivate _last : TTo;\r\n\tprivate _subToken : DisposalToken;\r\n\tinfo : IRexInfo = {\r\n\t\ttype : RexNames.Convert,\r\n\t\tlazy : true,\r\n\t\tfunctional : true\r\n\t};\r\n\r\n\tconstructor(private parent : RexScalar<TFrom>, private conversion : Conversion<TFrom, TTo>) {\r\n\t\tsuper();\r\n\t\tthis.depends.source = parent;\r\n\t\tthis._subToken = parent.changed.on(() => this.notifyChange(this._last));\r\n\t\tlet parentClose = parent.closing.on(() => this.close());\r\n\t\tlet selfChange = this.changed.on(() => this._last = undefined);\r\n\t\tthis._subToken = this._subToken.and(parentClose, selfChange)\r\n\t}\r\n\r\n\tget value() {\r\n\t\tthis.makeSureNotClosed();\r\n\t\tif (this._last === undefined) {\r\n\t\t\tif (!this.conversion.from) {\r\n\t\t\t\tthrow Errors.cannotRead(this.meta.name);\r\n\t\t\t}\r\n\t\t\tthis._last = this.conversion.to(this.parent.value);\r\n\t\t}\r\n\t\treturn this._last;\r\n\t}\r\n\r\n\tset value(val : TTo) {\r\n\t\tthis.makeSureNotClosed();\r\n\t\tif (!this.conversion.to) {\r\n\t\t\tthrow Errors.cannotWrite(this.meta.name);\r\n\t\t}\r\n\t\tthis._last = val;\r\n\t\tthis.parent.value = this.conversion.from(val);\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis._subToken.close();\r\n\t\tsuper.close();\r\n\t}\r\n}"],"sourceRoot":"/src"}