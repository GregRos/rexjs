{"version":3,"sources":["extension/scalar-mutations.ts"],"names":[],"mappings":";;;;;;AAAA;;GAEG;AACH,qBAAwB,sBAAsB,CAAC,CAAA;AAC/C,2BAA4B,eAAe,CAAC,CAAA;AAC5C,IAAO,CAAC,WAAW,QAAQ,CAAC,CAAC;AAkB7B;IAA6C,sCAAY;IAAzD;QAA6C,8BAAY;IAUzD,CAAC;IATA,mCAAM,GAAN,UAAO,QAA6B;QACnC,IAAI,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,mCAAM,GAAN,UAAQ,OAA4B;QACnC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IACF,yBAAC;AAAD,CAVA,AAUC,CAV4C,gBAAS,GAUrD;AAED,0BAAa,CAAC,KAAK,CAAC,gBAAS,EAAE,kBAAkB,CAAC,CAAC","file":"extension/scalar-mutations.js","sourcesContent":["/**\r\n * Created by Greg on 17/10/2016.\r\n */\r\nimport {RexScalar} from '../rexes/scalar/base';\r\nimport {ReflectHelper} from '../reflection';\r\nimport _ = require('lodash');\r\n\r\ndeclare module '../rexes/scalar/base' {\r\n\texport interface RexScalar<T> {\r\n\t\t/**\r\n\t\t * Clones the value and applies a mutation on the clone, then updates the Rex with it.\r\n\t\t * @param mutation The mutation.\r\n\t\t */\r\n\t\tmutate(mutation : (copy : T) => void) : void;\r\n\r\n\t\t/**\r\n\t\t * Takes a function that updates the current value of the Rex to another value.\r\n\t\t * @param reducer The reducer.\r\n\t\t */\r\n\t\treduce(reducer : (current : T) => T) : void;\r\n\t}\r\n}\r\n\r\nabstract class RexScalarMutations<T> extends RexScalar<T> {\r\n\tmutate(mutation : (copy : T) => void) : void {\r\n\t\tlet copy = _.cloneDeep(this.value);\r\n\t\tmutation(copy);\r\n\t\tthis.value = copy;\r\n\t}\r\n\r\n\treduce( reducer : (current : T) => T) {\r\n\t\tthis.value = reducer(this.value);\r\n\t}\r\n}\r\n\r\nReflectHelper.mixin(RexScalar, RexScalarMutations);"],"sourceRoot":"/src"}