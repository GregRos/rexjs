{"version":3,"sources":["extension/disposalToken.ts"],"names":[],"mappings":";;;;;;AAAA,sBAAyC,UAAU,CAAC,CAAA;AAWpD;IAAgC,qCAAa;IAG5C,2BAAY,IAAoB;QAHjC,iBA0BC;QAtBC,kBAAM;YACL,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAE,EAAT,CAAS,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,+BAAG,GAAH;QAAI,qBAA8B;aAA9B,WAA8B,CAA9B,sBAA8B,CAA9B,IAA8B;YAA9B,oCAA8B;;QACjC,IAAI,OAAO,GAAmB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1D,GAAG,CAAC,CAAY,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,CAAC;YAAvB,IAAI,GAAG,oBAAA;YACX,EAAE,CAAC,CAAC,GAAG,YAAY,iBAAiB,CAAC,CAAC,CAAC;gBACtC,OAAO,CAAC,IAAI,OAAZ,OAAO,EAAS,GAAG,CAAC,aAAa,CAAC,CAAC;YACpC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACD;QACD,MAAM,CAAC,IAAI,iBAAiB,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,iCAAK,GAAL;QACC,gBAAK,CAAC,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IACzB,CAAC;IACF,wBAAC;AAAD,CA1BA,AA0BC,CA1B+B,qBAAa,GA0B5C;AAED,IAAM,yBAAyB,GAAG;IACjC,GAAG;QAAuB,qBAA8B;aAA9B,WAA8B,CAA9B,sBAA8B,CAA9B,IAA8B;YAA9B,oCAA8B;;QACvD,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,CAAC,IAAI,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;CACD,CAAC;AAGF,MAAM,CAAC,MAAM,CAAC,qBAAa,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC","file":"extension/disposalToken.js","sourcesContent":["import {DisposalToken, IDisposable} from \"../index\";\r\n/**\r\n * Created by Greg on 02/10/2016.\r\n */\r\n\r\ndeclare module '../events/interfaces' {\r\n\tinterface DisposalToken {\r\n\t\tand(...otherTokens : IDisposable[]);\r\n\t}\r\n}\r\n\r\nclass DisposalTokenList extends DisposalToken {\r\n\tprivate _disposalList : IDisposable[];\r\n\r\n\tconstructor(list : IDisposable[]) {\r\n\t\tsuper(() => {\r\n\t\t\tthis._disposalList.forEach(x => x.close());\r\n\t\t});\r\n\t\tthis._disposalList = list;\r\n\t}\r\n\r\n\tand(...otherTokens : IDisposable[]) {\r\n\t\tlet newList : IDisposable[] = this._disposalList.slice(0);\r\n\t\tfor (let tok of otherTokens) {\r\n\t\t\tif (tok instanceof DisposalTokenList) {\r\n\t\t\t\tnewList.push(...tok._disposalList);\r\n\t\t\t} else {\r\n\t\t\t\tnewList.push(tok);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new DisposalTokenList(newList);\r\n\t}\r\n\r\n\tclose() {\r\n\t\tsuper.close();\r\n\t\tthis._disposalList = [];\r\n\t}\r\n}\r\n\r\nconst DisposableTokenExtensions = {\r\n\tand(this : DisposalToken, ...otherTokens : IDisposable[]) {\r\n\t\totherTokens.unshift(this);\r\n\t\treturn new DisposalTokenList(otherTokens);\r\n\t}\r\n};\r\n\r\n\r\nObject.assign(DisposalToken.prototype, DisposableTokenExtensions);\r\n\r\n\r\n"],"sourceRoot":"/src"}